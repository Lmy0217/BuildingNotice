<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cst.buildingnotice.dao.InviteMapper">
  <resultMap id="BaseResultMap" type="org.cst.buildingnotice.entity.Invite">
    <id column="code" jdbcType="VARCHAR" property="code" />
    <result column="createid" jdbcType="INTEGER" property="createid" />
    <result column="inviteid" jdbcType="INTEGER" property="inviteid" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    code, createid, inviteid, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invite
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <select id="getUsersByCreateidAndStatus" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    select 
        id, name, role
    from invite, user
    where createid = #{createid,jdbcType=INTEGER} and inviteid = id and invite.status = #{status,jdbcType=INTEGER}
    order by code
  </select>
  <select id="getAdminNameByInviteid" parameterType="java.lang.Integer" resultType="java.lang.String">
    select 
        name
    from invite, user
    where inviteid = #{inviteid,jdbcType=INTEGER} and createid = id
  </select>
  <select id="selectByCreateid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invite
    where createid = #{createid,jdbcType=INTEGER}
    order by code
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from invite
    where code = #{code,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.cst.buildingnotice.entity.Invite">
    insert into invite (code, createid, inviteid, 
      status)
    values (#{code,jdbcType=VARCHAR}, #{createid,jdbcType=INTEGER}, #{inviteid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertCodes" parameterType="java.util.HashMap">
    insert into invite (code, createid)
    values
    <foreach collection="codes" index="index" item="item" open="" separator="," close="">
        (#{item}, #{createid,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="org.cst.buildingnotice.entity.Invite">
    insert into invite
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="createid != null">
        createid,
      </if>
      <if test="inviteid != null">
        inviteid,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        #{createid,jdbcType=INTEGER},
      </if>
      <if test="inviteid != null">
        #{inviteid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cst.buildingnotice.entity.Invite">
    update invite
    <set>
      <if test="createid != null">
        createid = #{createid,jdbcType=INTEGER},
      </if>
      <if test="inviteid != null">
        inviteid = #{inviteid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cst.buildingnotice.entity.Invite">
    update invite
    set createid = #{createid,jdbcType=INTEGER},
      inviteid = #{inviteid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where code = #{code,jdbcType=VARCHAR}
  </update>
</mapper>