<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cst.buildingnotice.dao.TypeMapper">
  <resultMap id="BaseResultMap" type="org.cst.buildingnotice.entity.Type">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.cst.buildingnotice.entity.TypeWithBLOBs">
    <result column="body1" jdbcType="LONGVARCHAR" property="body1" />
    <result column="body2" jdbcType="LONGVARCHAR" property="body2" />
    <result column="body3" jdbcType="LONGVARCHAR" property="body3" />
    <result column="advise" jdbcType="LONGVARCHAR" property="advise" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name
  </sql>
  <sql id="Blob_Column_List">
    body1, body2, body3, advise
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.cst.buildingnotice.entity.TypeWithBLOBs">
    insert into type (id, name, body1, 
      body2, body3, advise
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{body1,jdbcType=LONGVARCHAR}, 
      #{body2,jdbcType=LONGVARCHAR}, #{body3,jdbcType=LONGVARCHAR}, #{advise,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="org.cst.buildingnotice.entity.TypeWithBLOBs">
    insert into type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="body1 != null">
        body1,
      </if>
      <if test="body2 != null">
        body2,
      </if>
      <if test="body3 != null">
        body3,
      </if>
      <if test="advise != null">
        advise,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="body1 != null">
        #{body1,jdbcType=LONGVARCHAR},
      </if>
      <if test="body2 != null">
        #{body2,jdbcType=LONGVARCHAR},
      </if>
      <if test="body3 != null">
        #{body3,jdbcType=LONGVARCHAR},
      </if>
      <if test="advise != null">
        #{advise,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cst.buildingnotice.entity.TypeWithBLOBs">
    update type
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="body1 != null">
        body1 = #{body1,jdbcType=LONGVARCHAR},
      </if>
      <if test="body2 != null">
        body2 = #{body2,jdbcType=LONGVARCHAR},
      </if>
      <if test="body3 != null">
        body3 = #{body3,jdbcType=LONGVARCHAR},
      </if>
      <if test="advise != null">
        advise = #{advise,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.cst.buildingnotice.entity.TypeWithBLOBs">
    update type
    set name = #{name,jdbcType=VARCHAR},
      body1 = #{body1,jdbcType=LONGVARCHAR},
      body2 = #{body2,jdbcType=LONGVARCHAR},
      body3 = #{body3,jdbcType=LONGVARCHAR},
      advise = #{advise,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cst.buildingnotice.entity.Type">
    update type
    set name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>